import unittest
import numpy as np
from dfs import get_predict_input, dfs, normalize, dfs_iterative


class Tiling(unittest.TestCase):
	def test_normalize(self):
		test = [[4, 59, 102, 85, 49, 65, 48, 85], [52, 58, 69, 70, 50, 97, 85, 63], [35, 46, 57, 84, 67, 42, 77, 67], [23, 62, 46, 79, 63, 84, 72, 88], [5, 16, 46, 56, 72, 57, 93, 80], [0, 15, 8, 22, 60, 54, 50, 52], [0, 0, 0, 16, 27, 15, 37, 33], [0, 0, 14, 2, 12, 1, 8, 19]]
		answer = [[-0.04613047, 0.01521417, 0.06317451, 0.04421345, 0.0040606, 0.02190631, 0.00294524, 0.04421345], [0.00740667, 0.01409881, 0.02636774, 0.02748309, 0.00517595, 0.05759773, 0.04421345, 0.01967559], [-0.0115544, 0.00071453, 0.01298345, 0.04309809, 0.02413702, -0.0037469, 0.03529059, 0.02413702], [-0.02493868, 0.01856024, 0.00071453, 0.0375213, 0.01967559, 0.04309809, 0.02971381, 0.04755952], [-0.04501511, -0.03274618, 0.00071453, 0.01186809, 0.02971381, 0.01298345, 0.0531363, 0.03863666], [-0.05059189, -0.03386154, -0.04166904, -0.02605404, 0.01632952, 0.00963738, 0.00517595, 0.00740667], [-0.05059189, -0.05059189, -0.05059189, -0.03274618, -0.02047726, -0.03386154, -0.00932369, -0.01378511], [-0.05059189, -0.05059189, -0.0349769, -0.04836118, -0.03720761, -0.04947654, -0.04166904, -0.02940011]]
		np.testing.assert_array_almost_equal(normalize(np.array(test)), np.array(answer))

	def test_answer(self):
		test = np.array([[4, 59, 102, 85, 49, 65, 48, 85], [52, 58, 69, 70, 50, 97, 85, 63], [35, 46, 57, 84, 67, 42, 77, 67], [23, 62, 46, 79, 63, 84, 72, 88], [5, 16, 46, 56, 72, 57, 93, 80], [0, 15, 8, 22, 60, 54, 50, 52], [0, 0, 0, 16, 27, 15, 37, 33], [0, 0, 14, 2, 12, 1, 8, 19]])
		# print(get_predict_input(test, 4))

	def test_dfs(self):
		size = 4
		MAT = np.zeros((size, size))
		dfs(MAT, 0, 0, size, size)

	def test_dfs_iterative(self):
		MAT = np.array([[0, 0, 0, 1], [0, 2, 0, 3], [0, 0, 0, 7], [1, 0, 2, 0]])
		dfs_iterative(MAT, 0, 3)
		dfs_iterative(MAT, 0, 2)

	def test_overflow(self):
		size = 256
		MAT = np.zeros([size, size])
		# print(MAT)
		dfs_iterative(MAT, 0, 0)
		# print(MAT)

	def test_get_predicting_input(self):
		test = np.array([[4, 59, 102, 85, 49, 65, 48, 85], [52, 58, 69, 70, 50, 97, 85, 63], [35, 46, 57, 84, 67, 42, 77, 67], [23, 62, 46, 79, 63, 84, 72, 88], [5, 16, 46, 56, 72, 57, 93, 80], [0, 15, 8, 22, 60, 54, 50, 52], [0, 0, 0, 16, 27, 15, 37, 33], [0, 0, 14, 2, 12, 1, 8, 19]])
		print(get_predict_input(test, 4))

if __name__ == '__main__':
	unittest.main()
